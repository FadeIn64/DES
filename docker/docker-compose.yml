version: '3.8'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    env_file:
      - zookeeper.env
    networks:
      - my_net
    ports:
      - "22181:2181"
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    hostname: kafka
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
      - "9092:9092"
    networks:
      - my_net
    env_file:
      - kafka.env
  service-db:
    image: postgres:15-alpine3.19
    env_file:
      - db.env
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U username -d summer" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - my_net
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./db/:/docker-entrypoint-initdb.d/
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    networks:
      - my_net
    depends_on:
      - das
  das:
    build: ./../analyzer/.
    hostname: das
    ports:
      - "2112:2112"
    env_file:
      - das.env
    networks:
      - my_net
    depends_on:
      - kafka
      - service-db


  grafana:
    image: grafana/grafana-enterprise
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    depends_on:
      - prometheus
    networks:
      - my_net

volumes:
  db-data:
  grafana_data:

networks:
  my_net:
    driver: bridge
